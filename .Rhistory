jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
estimate$overview
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
estimate
jmvtools::install()
for (e_table in estimate) {print(class(e_table))}
for (e_table in names(estimate)) {print(e_table)}
estimate[["es_mean"]]
jmvtools::install()
jmvtools::install()
for (e_table in names(estimate)) {print(e_table)}
for (e_table in names(estimate)) {print(e_table)}
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
rattan_motivation <- c(
5.5	,
5	,
5.5	,
6	,
1	,
2.5	,
4.5	,
1	,
3.5	,
1.5	,
5.5	,
6	,
1.5	,
1	,
3.5	,
2.5	,
3	,
1	,
2	,
6	,
4.5	,
4.5	,
6	,
7	,
3	,
7	,
3.5	,
5	,
4.5	,
5.5	,
6.5	,
6	,
6	,
7	,
5.5	,
6	,
2.5	,
4.5	,
3.5	,
6	,
5	,
6	,
3.5	,
4	,
3	,
5.5	,
3	,
6	,
3	,
5	,
6	,
6.5	,
3.5	,
2
)
rattan_condition <- as.factor(
c(
rep("Comfort", 18),
rep("Chaling", 17),
rep("Control", 19)
)
)
rattan <- data.frame(
motivation = rattan_motivation,
condition = rattan_condition,
other_outcome = rnorm(n = 18+17+19, mean = 100, sd = 15)
)
contrast <- c("Comfort" = 1/2, "Chaling" = 1/2, "Control" = -1)
# Check - works with vector
estimate_mdiff_ind_contrast(
outcome_variable = rattan_motivation,
grouping_variable = rattan_condition,
contrast = contrast,
assume_equal_variance = TRUE
)
# Check - works with vector
estimate <- estimate_mdiff_ind_contrast(
outcome_variable = rattan_motivation,
grouping_variable = rattan_condition,
contrast = contrast,
assume_equal_variance = TRUE
)
estimate$overview
estimate$es_mean_difference
estimate$es_smd
estimate$es_median_difference
library(esci4)
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
estimate$overview
estimate$overview
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
library(esci4)
jmvtools::install()
transcription_scores <- c(
12.1	,
6.5	,
8.1	,
7.6	,
12.2	,
10.8	,
1	,
2.9	,
14.4	,
8.4	,
17.7	,
20.1	,
2.1	,
11.1	,
11.2	,
10.7	,
1.9	,
5.2	,
9.7	,
5.2	,
2.4	,
7.1	,
8.7	,
8	,
11.3	,
8.5	,
9.1	,
4.5	,
9.2	,
13.3	,
18.3	,
2.8	,
5.1	,
12.4	,
13.7	,
21.1	,
15.2	,
30.4	,
12.8	,
9.6	,
9.3	,
17.7	,
15.4	,
8.7	,
12.8	,
10.6	,
5.1	,
16.7	,
17.7	,
8.7	,
26.4	,
18	,
19	,
16.9	,
18.8	,
8.5	,
1.2	,
11.5	,
21.4	,
10.3	,
9	,
12.8	,
12	,
34.7	,
4.1
)
note_taking <- as.factor(
c(
rep("Pen", 34),
rep("Laptop", 31)
)
)
pen_laptop <- data.frame(
"note_taking_c" = note_taking,
"transcription_scores_c" = transcription_scores,
"other" = rnorm(n = 65, mean = 100, sd = 15)
)
estimate <- estimate_mdiff_two(
outcome_variable = transcription_scores,
grouping_variable = note_taking,
assume_equal_variance = TRUE
)
estimate
estimate <- estimate_mdiff_two(
outcome_variable = transcription_scores,
grouping_variable = note_taking,
assume_equal_variance = TRUE, outcome_variable_name = "OC"
)
estimate
estimate <- estimate_mdiff_two(
outcome_variable = transcription_scores,
grouping_variable = note_taking,
assume_equal_variance = TRUE, outcome_variable_name = NULL
)
estimate <- estimate_mdiff_two(
outcome_variable = transcription_scores,
grouping_variable = note_taking,
assume_equal_variance = TRUE
)
estimate
estimate <- estimate_mdiff_two(
outcome_variable = transcription_scores,
grouping_variable = note_taking,
assume_equal_variance = TRUE, grouping_variable_name = "gv"
)
estimate
estimate <- estimate_mdiff_two(
outcome_variable = transcription_scores,
grouping_variable = note_taking,
assume_equal_variance = TRUE, grouping_variable_levels = c("OK", "DK")
)
sd1 <- 4.28
sd2 <- 3.4
sdiff <- 2.13
cor <- (sd1^2 + sd2^2 - sdiff^2) / (2*sd1*sd2)
estimate_mdiff_paired(
comparison_mean = 14.25,
comparison_sd = 4.28,
reference_mean = 12.88,
reference_sd = 3.4,
n = 16,
correlation = 0.87072223749,
comparison_measure_name = "Before",
reference_measure_name = "After"
)
bk_wrapper <- c(
4	,
4	,
3	,
2	,
2	,
5	,
1	,
1	,
3	,
1	,
1	,
2	,
4	,
3	,
1	,
1	,
1	,
3	,
1	,
1	,
1	,
5	,
1	,
4	,
1	,
3	,
2	,
4	,
2	,
1
)
wc_wrapper <- c(
2	,
3	,
2	,
1	,
1	,
2	,
1	,
1	,
3	,
2	,
1	,
1	,
2	,
4	,
1	,
1	,
4	,
2	,
2	,
1	,
2	,
2	,
1	,
3	,
2	,
2	,
1	,
1	,
2	,
2
)
wrapper <- data.frame(
"wc" = wc_wrapper,
"bk" = bk_wrapper
)
# Check - vector
estimate_mdiff_paired(
comparison_measure = wc_wrapper,
reference_measure = bk_wrapper
)
# Check - vector
estimate <-  estimate_mdiff_paired(
comparison_measure = wc_wrapper,
reference_measure = bk_wrapper
)
estimate
library(esci4)
# Check - vector
estimate <-  estimate_mdiff_paired(
comparison_measure = wc_wrapper,
reference_measure = bk_wrapper
)
# Check - vector
estimate <-  estimate_mdiff_paired(
comparison_measure = wc_wrapper,
reference_measure = bk_wrapper
)
library(esci4)
# Check - vector
estimate <-  estimate_mdiff_paired(
comparison_measure = wc_wrapper,
reference_measure = bk_wrapper
)
estimate
? estimate_mdiff_paired
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
estimate
estimate
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
library(esci4)
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
bk_wrapper <- c(
4	,
4	,
3	,
2	,
2	,
5	,
1	,
1	,
3	,
1	,
1	,
2	,
4	,
3	,
1	,
1	,
1	,
3	,
1	,
1	,
1	,
5	,
1	,
4	,
1	,
3	,
2	,
4	,
2	,
1
)
wc_wrapper <- c(
2	,
3	,
2	,
1	,
1	,
2	,
1	,
1	,
3	,
2	,
1	,
1	,
2	,
4	,
1	,
1	,
4	,
2	,
2	,
1	,
2	,
2	,
1	,
3	,
2	,
2	,
1	,
1	,
2	,
2
)
wrapper <- data.frame(
"wc" = wc_wrapper,
"bk" = bk_wrapper
)
# Check - vector
estimate_mdiff_paired(
comparison_measure = wc_wrapper,
reference_measure = bk_wrapper
)
# Check data frame, column as strings
estimate_mdiff_paired(
data = wrapper,
comparison_measure = "wc",
reference_measure = "bk"
)
# Check data frame, columns as tidy
estimate <- estimate_mdiff_paired(wrapper, wc, bk)
wrapper
wrapper[1, 1]
wrapper[1, 1] <- NA
# Check data frame, column as strings
estimate_mdiff_paired(
data = wrapper,
comparison_measure = "wc",
reference_measure = "bk"
)
library(esci4)
# Check data frame, column as strings
estimate_mdiff_paired(
data = wrapper,
comparison_measure = "wc",
reference_measure = "bk"
)
overview
overview$mean[1]
overview$sd[1]
overview$mean[2]
overview$sd[2]
overview$n[1]
cor(data[[comparison_measure]], data[[reference_measure]])
? cor
library(esci4)
# Check data frame, column as strings
estimate_mdiff_paired(
data = wrapper,
comparison_measure = "wc",
reference_measure = "bk"
)
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
