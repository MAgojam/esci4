dep_status <- as.factor(
c(
rep("Depressed", 8),
rep("NotDepressed", 22-8),
NA,
NA,
NA
)
)
estimate_proportion(outcome_variable = dep_status, count_NA = FALSE)
estimate_proportion(
outcome_variable = dep_status,
outcome_variable_name = "Something",
case_level = "Depressed",
count_NA = TRUE
)
library(esci4)
estimate_proportion(
outcome_variable = dep_status,
outcome_variable_name = "Something",
case_level = "Depressed",
count_NA = TRUE
)
estimate$overview
one_ocv
library(esci4)
estimate_proportion(
outcome_variable = dep_status,
outcome_variable_name = "Something",
case_level = "Depressed",
count_NA = TRUE
)
estimate_proportion(
outcome_variable = dep_status,
outcome_variable_name = "Something",
case_level = "Depressed",
count_NA = TRUE
)
es_proportion
library(esci4)
)
estimate_proportion(
outcome_variable = dep_status,
outcome_variable_name = "Something",
case_level = "Depressed",
count_NA = TRUE
)
estimate_proportion(outcome_variable = dep_status, count_NA = FALSE)
estimate_proportion(
outcome_variable = dep_status,
outcome_variable_name = "Something",
case_level = "Depressed",
count_NA = TRUE
)
dep_data <- data.frame(
depression_status = dep_status,
other = as.factor(c(rep("G1", 12), rep("G2", 13)))
)
estimate_proportion(dep_data, depression_status, count_NA = TRUE)
estimate_proportion(dep_data, "depression_status", count_NA = TRUE)
estimate_proportion(dep_data, c("depression_status", "other"))
library(esci4)
estimate_proportion(dep_data, c("depression_status", "other"))
ocvs <- unique(estimate$overview[c("outcome_variable_name")])
for (ocv in ocvs) {print(ocv)}
library(esci4)
estimate_proportion(dep_data, c("depression_status", "other"))
library(esci4)
estimate_proportion(dep_data, c("depression_status", "other"))
estimate_proportion(dep_data, c("depression_status", "other"))
class(ocv)
ocv$outcome_variable_name
library(esci4)
estimate_proportion(dep_data, c("depression_status", "other"))
# Esci one proportion - 8/22
estimate_proportion(
counts = c(8, 22-8)
)
estimate_proportion(
counts = c(8, 22-8),
case_level = 2,
outcome_variable_name = "My Variable",
outcome_variable_levels = c("Affected", "Not Affected"),
conf_level = 0.99
)
dep_status <- as.factor(
c(
rep("Depressed", 8),
rep("NotDepressed", 22-8),
NA,
NA,
NA
)
)
estimate_proportion(outcome_variable = dep_status, count_NA = FALSE)
estimate_proportion(
outcome_variable = dep_status,
outcome_variable_name = "Something",
case_level = "Depressed",
count_NA = TRUE
)
dep_data <- data.frame(
depression_status = dep_status,
other = as.factor(c(rep("G1", 12), rep("G2", 13)))
)
estimate_proportion(dep_data, depression_status, count_NA = TRUE)
estimate_proportion(dep_data, "depression_status", count_NA = TRUE)
estimate_proportion(dep_data, c("depression_status", "other"))
estimate_proportion(dep_data, c("depression_status", "other"), case_level = 2)
library(esci4)
library(esci4)
# Esci one proportion - 8/22
estimate_proportion(
counts = c(8, 22-8)
)
library(esci4)
# Esci one proportion - 8/22
estimate_proportion(
counts = c(8, 22-8)
)
library(esci4)
# Esci one proportion - 8/22
estimate_proportion(
counts = c(8, 22-8)
)
# Esci one proportion - 8/22
estimate_proportion(
counts = c(8, 22-8)
)
library(esci4)
estimate_proportion(
counts = c(8, 22-8),
case_level = 2,
outcome_variable_name = "My Variable",
outcome_variable_levels = c("Affected", "Not Affected"),
conf_level = 0.99
)
dep_status <- as.factor(
c(
rep("Depressed", 8),
rep("NotDepressed", 22-8),
NA,
NA,
NA
)
)
estimate_proportion(outcome_variable = dep_status, count_NA = FALSE)
estimate_proportion(
outcome_variable = dep_status,
outcome_variable_name = "Something",
case_level = "Depressed",
count_NA = TRUE
)
dep_data <- data.frame(
depression_status = dep_status,
other = as.factor(c(rep("G1", 12), rep("G2", 13)))
)
estimate_proportion(dep_data, depression_status, count_NA = TRUE)
estimate_proportion(dep_data, "depression_status", count_NA = TRUE)
estimate_proportion(dep_data, c("depression_status", "other"), case_level = 2)
library(esci4)
estimate_proportion(dep_data, c("depression_status", "other"), case_level = 2)
estimate <- estimate_proportion(dep_data, c("depression_status", "other"), case_level = 2)
estimate$depression_status
library(esci4)
estimate <- estimate_proportion(dep_data, c("depression_status", "other"), case_level = 2)
estimate[[ocv]] <- estimate_proportion(
data = data,
outcome_variable = ocv,
case_level = case_level,
conf_level = conf_level,
count_NA = count_NA
)
library(esci4)
estimate <- estimate_proportion(dep_data, c("depression_status", "other"), case_level = 2)
esci_estimate_consolidate(estimate)
library(esci4)
estimate <- estimate_proportion(dep_data, c("depression_status", "other"), case_level = 2)
estimate
estimate$overview
library(esci4)
estimate <- estimate_proportion(dep_data, c("depression_status", "other"), case_level = 2)
estimate
estimate$depression_status$properties
library(esci4)
estimate <- estimate_proportion(dep_data, c("depression_status", "other"), case_level = 2)
estimate
# Esci one proportion - 8/22
estimate_proportion(
counts = c(8, 22-8)
)
estimate_proportion(
counts = c(8, 22-8),
case_level = 2,
outcome_variable_name = "My Variable",
outcome_variable_levels = c("Affected", "Not Affected"),
conf_level = 0.99
)
dep_status <- as.factor(
c(
rep("Depressed", 8),
rep("NotDepressed", 22-8),
NA,
NA,
NA
)
)
estimate_proportion(outcome_variable = dep_status, count_NA = FALSE)
estimate_proportion(
outcome_variable = dep_status,
outcome_variable_name = "Something",
case_level = "Depressed",
count_NA = TRUE
)
dep_data <- data.frame(
depression_status = dep_status,
other = as.factor(c(rep("G1", 12), rep("G2", 13)))
)
estimate_proportion(dep_data, depression_status, count_NA = TRUE)
estimate_proportion(dep_data, "depression_status", count_NA = TRUE)
estimate <- estimate_proportion(dep_data, c("depression_status", "other"), case_level = 2)
library(esci4)
# Esci one proportion - 8/22
estimate_pdiff_one(
counts = c(8, 22-8),
reference_p = 0.10
)
library(esci4)
library(esci4)
# Esci one proportion - 8/22
estimate_proportion(
counts = c(8, 22-8)
)
estimate_proportion(
counts = c(8, 22-8),
case_level = 2,
outcome_variable_name = "My Variable",
outcome_variable_levels = c("Affected", "Not Affected"),
conf_level = 0.99
)
dep_status <- as.factor(
c(
rep("Depressed", 8),
rep("NotDepressed", 22-8),
NA,
NA,
NA
)
)
estimate_proportion(outcome_variable = dep_status, count_NA = FALSE)
estimate_proportion(
outcome_variable = dep_status,
outcome_variable_name = "Something",
case_level = "Depressed",
count_NA = TRUE
)
dep_data <- data.frame(
depression_status = dep_status,
other = as.factor(c(rep("G1", 12), rep("G2", 13)))
)
estimate_proportion(dep_data, depression_status, count_NA = TRUE)
estimate_proportion(dep_data, "depression_status", count_NA = TRUE)
estimate <- estimate_proportion(dep_data, c("depression_status", "other"), case_level = 2)
test_overview_nominal <- function() {
# Esci one proportion - 8/22
estimate_proportion(
counts = c(8, 22-8)
)
# Should yield:
#outcome_variable_name outcome_variable_level count  n         P      P_LL      P_UL       P_SE
#1   My Outcome Variable                 Level1     8 22 0.3636364 0.1976126 0.5716182 0.09541133
estimate_proportion(
counts = c(8, 22-8),
case_level = 2,
outcome_variable_name = "My Variable",
outcome_variable_levels = c("Affected", "Not Affected"),
conf_level = 0.99
)
dep_status <- as.factor(
c(
rep("Depressed", 8),
rep("NotDepressed", 22-8),
NA,
NA,
NA
)
)
estimate_proportion(outcome_variable = dep_status, count_NA = FALSE)
estimate_proportion(
outcome_variable = dep_status,
outcome_variable_name = "Something",
case_level = "Depressed",
count_NA = TRUE
)
dep_data <- data.frame(
depression_status = dep_status,
other = as.factor(c(rep("G1", 12), rep("G2", 13)))
)
estimate_proportion(dep_data, depression_status, count_NA = TRUE)
estimate_proportion(dep_data, "depression_status", count_NA = TRUE)
estimate <- estimate_proportion(dep_data, c("depression_status", "other"), case_level = 2)
}
library(esci4)
# Esci one proportion - 8/22
estimate_pdiff_one(
counts = c(8, 22-8),
reference_p = 0.10
)
# Esci one proportion - 8/22
estimate_pdiff_one(
comparison_count = 8,
comparison_n = 22,
reference_p = 0.10
)
library(esci4)
library(esci4)
# Esci one proportion - 8/22
estimate_pdiff_one(
comparison_count = 8,
comparison_n = 22,
reference_p = 0.10
)
estimate$es_proportion$P
library(esci4)
# Check - pen group from pen/latop in esci in excel, summary two
estimate_magnitude(mean = 6.88, sd = 4.22, n = 48)
# Esci one proportion - 8/22
estimate_proportion(
counts = c(8, 22-8)
)
library(esci4)
# Esci one proportion - 8/22
estimate_proportion(
counts = c(8, 22-8)
)
estimate_proportion(
counts = c(8, 22-8),
case_level = 2,
outcome_variable_name = "My Variable",
outcome_variable_levels = c("Affected", "Not Affected"),
conf_level = 0.99
)
dep_status <- as.factor(
c(
rep("Depressed", 8),
rep("NotDepressed", 22-8),
NA,
NA,
NA
)
)
estimate_proportion(outcome_variable = dep_status, count_NA = FALSE)
estimate_proportion(
outcome_variable = dep_status,
outcome_variable_name = "Something",
case_level = "Depressed",
count_NA = TRUE
)
dep_data <- data.frame(
depression_status = dep_status,
other = as.factor(c(rep("G1", 12), rep("G2", 13)))
)
estimate_proportion(dep_data, depression_status, count_NA = TRUE)
estimate_proportion(dep_data, "depression_status", count_NA = TRUE)
estimate <- estimate_proportion(dep_data, c("depression_status", "other"), case_level = 2)
# Esci one proportion - 8/22
estimate_pdiff_one(
comparison_count = 8,
comparison_n = 22,
reference_p = 0.10
)
library(esci4)
# Esci one proportion - 8/22
estimate_pdiff_one(
comparison_count = 8,
comparison_n = 22,
reference_p = 0.10
)
library(esci4)
# Esci one proportion - 8/22
estimate_pdiff_one(
comparison_count = 8,
comparison_n = 22,
reference_p = 0.10
)
estimate$es_proportion_difference
library(esci4)
# Esci one proportion - 8/22
estimate_pdiff_one(
comparison_count = 8,
comparison_n = 22,
reference_p = 0.10
)
estimate_pdiff_one(
comparison_count = 8,
comparison_n = 22,
case_level = "Not Affected",
outcome_variable_name = "My Variable",
conf_level = 0.99
)
estimate_pdiff_one(
comparison_count = 8,
comparison_n = 22,
outcome_variable_name = "My Variable",
conf_level = 0.99
)
library(esci4)
# Esci one proportion - 8/22
estimate_pdiff_one(
comparison_count = 8,
comparison_n = 22,
reference_p = 0.10
)
estimate_pdiff_one(
comparison_count = 8,
comparison_n = 22,
case_level = "Depressed"
outcome_variable_name = "My Variable",
conf_level = 0.99
)
estimate_pdiff_one(
comparison_count = 8,
comparison_n = 22,
case_level = "Depressed",
outcome_variable_name = "My Variable",
conf_level = 0.99
)
dep_status <- as.factor(
c(
rep("Depressed", 8),
rep("NotDepressed", 22-8),
NA,
NA,
NA
)
)
estimate_proportion(outcome_variable = dep_status, count_NA = FALSE)
estimate_pdiff_one(
outcome_variable = dep_status,
reference_p = 0.10,
count_NA = FALSE
)
library(esci4)
estimate_pdiff_one(
outcome_variable = dep_status,
reference_p = 0.10,
count_NA = FALSE
)
estimate_pdiff_one(
outcome_variable = dep_status,
outcome_variable_name = "Something",
reference_p = 0.10,
case_level = "Depressed",
count_NA = TRUE
)
estimate_pdiff_one(
outcome_variable = dep_status,
outcome_variable_name = "Something",
reference_p = 0.10,
case_level = 2,
count_NA = TRUE
)
dep_data <- data.frame(
depression_status = dep_status,
other = as.factor(c(rep("G1", 12), rep("G2", 13)))
)
dep_data <- data.frame(
depression_status = dep_status,
other = as.factor(c(rep("G1", 12), rep("G2", 13)))
)
estimate_pdiff_one(
dep_data,
depression_status,
reference_p = 0.10,
count_NA = TRUE
)
estimate_pdiff_one(
dep_data,
"depression_status",
reference_p = 0.10,
count_NA = TRUE
)
estimate <- estimate_pdiff_one(
dep_data,
c("depression_status", "other"),
reference_p = 0.10,
case_level = 2
)
library(esci4)
estimate <- estimate_pdiff_one(
dep_data,
c("depression_status", "other"),
reference_p = 0.10,
case_level = 2
)
library(esci4)
estimate <- estimate_pdiff_one(
dep_data,
c("depression_status", "other"),
reference_p = 0.10,
case_level = 2
)
estimate
library(esci4)
estimate <- estimate_pdiff_one(
dep_data,
c("depression_status", "other"),
reference_p = 0.10,
case_level = 2
)
estimate
library(esci4)
