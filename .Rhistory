0	,
0	,
0	,
83.86462181	,
0	,
11.33633924	,
0	,
0	,
0	,
0	,
16.92695777	,
35.05565719	,
35.24342022	,
27.28463783	,
37.81933794	,
53.71077136	,
85.61076548	,
66.51633675	,
83.1566542	,
0	,
88.06642205	,
54.81268596	,
81.91234484	,
79.18992107	,
13.53138262	,
28.78886727	,
40.89738512	,
53.96735411	,
0	,
0	,
20.33244468	,
37.18449077	,
31.52510351	,
1.09494681	,
0	,
68.56872617	,
0	,
56.46353646	,
47.5415876
)
)
estimate <- estimate_mdiff_one(mydata, Performance_Score)
estimate
plot_mdiff(estimate)
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
estimate
options(jamovi_home='C:\\Program Files\\jamovi 2.3.0.0')
jmvtools::install()
install.packages('jmvtools', repos=c('https://repo.jamovi.org', 'https://cran.r-project.org'))
install.packages("jmvtools", repos = c("https://repo.jamovi.org", "https://cran.r-project.org"))
jmvtools::install()
mydata
library(esci4)
estimate <- estimate_mdiff_one(mydata, Performance_Scores)
estimate <- estimate_mdiff_one(mydata, Performance_Score)
estimate
plot_mdiff(estimate)
estimate
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
b <- list()
jmvtools::install()
estimate$raw_data
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
library(esci4)
pen_transcription <- c(
12.1	,
6.5	,
8.1	,
7.6	,
12.2	,
10.8	,
1	,
2.9	,
14.4	,
8.4	,
17.7	,
20.1	,
2.1	,
11.1	,
11.2	,
10.7	,
1.9	,
5.2	,
9.7	,
5.2	,
2.4	,
7.1	,
8.7	,
8	,
11.3	,
8.5	,
9.1	,
4.5	,
9.2	,
13.3	,
18.3	,
2.8	,
5.1	,
12.4
)
# Check via vector
mdiff_one <- estimate_mdiff_one(
outcome_variable = pen_transcription
)
mdiff_one
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
plot_mdiff(mdiff_one)
plot_mdiff(mdiff_one, ylim(-5, NA))
plot_mdiff(mdiff_one, ylim = c(-5, 25))
plot_mdiff(mdiff_one, ylim = c(-5, NA))
plot_mdiff(mdiff_one, ylim = c(-5, "NA"))
jmvtools::install()
plot_mdiff(mdiff_one, ylim = c("NA", "NA"))
plot_mdiff(mdiff_one, ylim = c(NA, NA))
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
file.edit("~/.Rprofile")
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
try(bob <- 1)
bob
try(bob <-1 jill <- 2)
bob
jmvtools::install()
jmvtools::install()
jmvtools::install()
library(esci4)
# Setup
means <- c(37.5, 31.9, 41.2, 33.4, 29.9, 38.3)
sds <- c(10, 13.5, 14.8, 10, 8.7, 10)
ns <- c(19, 19, 19, 19, 19, 19)
grouping_variable_levels <- c(
"NFree10", "AFree10", "ADiet10", "NFree17", "AFree17", "ADiety17"
)
contrast <- c(1/2, 1/2, -1/3, -1/3, -1/3, 0)
# Check - match esci with 95% CI
estimate_mdiff_ind_contrast(
means = means,
sds = sds,
ns = ns,
contrast = contrast,
grouping_variable_levels = grouping_variable_levels,
assume_equal_variance = TRUE
)
# Check - match esci with 95% CI
es1 <- estimate_mdiff_ind_contrast(
means = means,
sds = sds,
ns = ns,
contrast = contrast,
grouping_variable_levels = grouping_variable_levels,
assume_equal_variance = TRUE
)
# Check - match esci with 95% CI
es2 <- estimate_mdiff_ind_contrast(
means = means,
sds = sds,
ns = ns,
contrast = NULL,
grouping_variable_levels = grouping_variable_levels,
assume_equal_variance = TRUE
)
es2
es2$properties
es2
es2$properties$contrast <- rep(0, nrow(es2$overview))
es2$properties$contrast
plot_mdiff(es2)
rattan_motivation <- c(
5.5	,
5	,
5.5	,
6	,
1	,
2.5	,
4.5	,
1	,
3.5	,
1.5	,
5.5	,
6	,
1.5	,
1	,
3.5	,
2.5	,
3	,
1	,
2	,
6	,
4.5	,
4.5	,
6	,
7	,
3	,
7	,
3.5	,
5	,
4.5	,
5.5	,
6.5	,
6	,
6	,
7	,
5.5	,
6	,
2.5	,
4.5	,
3.5	,
6	,
5	,
6	,
3.5	,
4	,
3	,
5.5	,
3	,
6	,
3	,
5	,
6	,
6.5	,
3.5	,
2
)
rattan_condition <- as.factor(
c(
rep("Comfort", 18),
rep("Chaling", 17),
rep("Control", 19)
)
)
rattan <- data.frame(
motivation = rattan_motivation,
condition = rattan_condition,
other_outcome = rnorm(n = 18+17+19, mean = 100, sd = 15)
)
contrast <- c("Comfort" = 1/2, "Chaling" = 1/2, "Control" = -1)
# Check - works with vector
estimate_mdiff_ind_contrast(
outcome_variable = rattan_motivation,
grouping_variable = rattan_condition,
contrast = contrast,
assume_equal_variance = TRUE
)
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
library(esci4)
library(esci4)
sd1 <- 4.28
sd2 <- 3.4
sdiff <- 2.13
cor <- (sd1^2 + sd2^2 - sdiff^2) / (2*sd1*sd2)
estimate_mdiff_paired(
comparison_mean = 14.25,
comparison_sd = 4.28,
reference_mean = 12.88,
reference_sd = 3.4,
n = 16,
correlation = 0.87072223749,
comparison_measure_name = "Before",
reference_measure_name = "After"
)
estimate <- estimate_mdiff_paired(
comparison_mean = 14.25,
comparison_sd = 4.28,
reference_mean = 12.88,
reference_sd = 3.4,
n = 16,
correlation = 0.87072223749,
comparison_measure_name = "Before",
reference_measure_name = "After"
)
plot_mdiff(estimate)
bk_wrapper <- c(
4	,
4	,
3	,
2	,
2	,
5	,
1	,
1	,
3	,
1	,
1	,
2	,
4	,
3	,
1	,
1	,
1	,
3	,
1	,
1	,
1	,
5	,
1	,
4	,
1	,
3	,
2	,
4	,
2	,
1
)
wc_wrapper <- c(
2	,
3	,
2	,
1	,
1	,
2	,
1	,
1	,
3	,
2	,
1	,
1	,
2	,
4	,
1	,
1	,
4	,
2	,
2	,
1	,
2	,
2	,
1	,
3	,
2	,
2	,
1	,
1	,
2	,
2
)
wrapper <- data.frame(
"wc" = wc_wrapper,
"bk" = bk_wrapper
)
# Check data frame, column as strings
mdiff_paired <- estimate_mdiff_paired(
data = wrapper,
comparison_measure = "wc",
reference_measure = "bk"
)
plot_mdiff(mdiff_paired)
wrapper
wrapper$bk < wrapper$bk + 4
wrapper$bk <- wrapper$bk + 4
# Check data frame, column as strings
mdiff_paired <- estimate_mdiff_paired(
data = wrapper,
comparison_measure = "wc",
reference_measure = "bk"
)
plot_mdiff(mdiff_paired)
plot_mdiff
mdiff_paired
mdiff_paired
library(esci4)
plot_mdiff(mdiff_paired)
plot_paired
gdata
rdata
grouping_variable = c(
rep(gdata$effect[[1]], nrow(rdata)),
rep(gdata$effect[[2]], nrow(rdata)),
rep(gdata$effect[[3]], nrow(rdata))
)
grouping_variable
library(esci4)
plot_mdiff(mdiff_paired)
plot_mdiff(mdiff_paired)
library(esci4)
plot_mdiff(mdiff_paired)
plot_mdiff(mdiff_paired)
library(esci4)
plot_mdiff(mdiff_paired)
rdata
rdata <- data.frame(
grouping_variable = c(
rep(gdata$effect[[1]], nrow(rdata)),
rep(gdata$effect[[2]], nrow(rdata)),
rep(gdata$effect[[3]], nrow(rdata))
),
outcome_variable = c(
rdata$reference_measure,
rdata$comparison_measure,
rdata$comparison_measure - rdata$reference_measure
)
)
plot_mdiff(mdiff_paired)
rdata <- data.frame(
grouping_variable = c(
rep(gdata$effect[[1]], nrow(rdata)),
rep(gdata$effect[[2]], nrow(rdata)),
rep(gdata$effect[[3]], nrow(rdata))
),
outcome_variable = c(
rdata$reference_measure,
rdata$comparison_measure,
rdata$comparison_measure - rdata$reference_measure
)
)
rdata
plot_mdiff(mdiff_paired)
rdata <- data.frame(
grouping_variable = c(
rep(gdata$effect[[1]], nrow(rdata)),
rep(gdata$effect[[2]], nrow(rdata)),
rep(gdata$effect[[3]], nrow(rdata))
),
outcome_variable = c(
rdata$reference_measure,
rdata$comparison_measure,
rdata$comparison_measure - rdata$reference_measure + rdata$comparison_measure
)
)
rdata$type <- "Difference"
rdata
library(esci4)
plot_mdiff(mdiff_paired)
View(wrapper)
wrapper$d <- wrapper$bk - wrapper$wc
wrapper$d <- wrapper$wc - wrapper$bk
library(esci4)
plot_mdiff(mdiff_paired)
usethis::edit_r_profile()
options(jamovi_home = "c:\\Program Files\\jamovi 2.3.9.0")
jmvtools::check()
install.packages('jmvtools', repos=c('https://repo.jamovi.org', 'https://cran.r-project.org'))
install.packages("jmvtools", repos = c("https://repo.jamovi.org", "https://cran.r-project.org"))
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
install.packages("rlang")
install.packages("rlang")
install.packages(c("checkmate", "circlize", "cli", "colorspace", "dplyr", "DT", "fansi", "ggplot2", "glue", "magrittr", "nloptr", "openssl", "pcaPP", "pkgdown", "processx", "ps", "psych", "quantreg", "RcppArmadillo", "rlang", "roxygen2", "semTools", "styler", "testthat", "tibble", "TOSTER", "xfun"))
