)
wc_wrapper <- c(
2	,
3	,
2	,
1	,
1	,
2	,
1	,
1	,
3	,
2	,
1	,
1	,
2	,
4	,
1	,
1	,
4	,
2	,
2	,
1	,
2	,
2	,
1	,
3	,
2	,
2	,
1	,
1	,
2	,
2
)
wrapper <- data.frame(
"wc" = wc_wrapper,
"bk" = bk_wrapper
)
# Check - vector
estimate_mdiff_paired(
comparison_measure = wc_wrapper,
reference_measure = bk_wrapper
)
# Check - vector
estimate_mdiff_paired(
comparison_measure = wc_wrapper,
reference_measure = bk_wrapper
)
# Check data frame, column as strings
estimate_mdiff_paired(
data = wrapper,
comparison_measure = "wc",
reference_measure = "bk"
)
# Check data frame, columns as tidy
estimate <- estimate_mdiff_paired(wrapper, wc, bk)
estimate
? statpsych::ci.median.ps
? statpsych::ci.median.ps
library(esci4)
# Check - vector
estimate_mdiff_paired(
comparison_measure = wc_wrapper,
reference_measure = bk_wrapper
)
library(esci4)
)
# Check - vector
estimate_mdiff_paired(
comparison_measure = wc_wrapper,
reference_measure = bk_wrapper
)
# Check - vector
estimate_mdiff_paired(
comparison_measure = wc_wrapper,
reference_measure = bk_wrapper
)
res
statpsych::ci.median.ps(
alpha = 1 - conf_level,
y1 = comparison_measure,
y2 = reference_measure
)
as.data.frame(
statpsych::ci.median.ps(
alpha = 1 - conf_level,
y1 = comparison_measure,
y2 = reference_measure
)
)[, c("Median1-Median2", "SE", "LL", "UL")]
es_median_difference <- rbind(
res,
as.data.frame(
statpsych::ci.median.ps(
alpha = 1 - conf_level,
y1 = comparison_measure,
y2 = reference_measure
)
)[, c("Median1-Median2", "SE", "LL", "UL")]
)
? rbind
library(esci4)
# Check - vector
estimate_mdiff_paired(
comparison_measure = wc_wrapper,
reference_measure = bk_wrapper
)
library(esci4)
# Check - vector
estimate_mdiff_paired(
comparison_measure = wc_wrapper,
reference_measure = bk_wrapper
)
library(esci4)
# Check - vector
estimate_mdiff_paired(
comparison_measure = wc_wrapper,
reference_measure = bk_wrapper
)
es_median_difference
library(esci4)
# Check - vector
estimate_mdiff_paired(
comparison_measure = wc_wrapper,
reference_measure = bk_wrapper
)
library(esci4)
# Check - vector
estimate_mdiff_paired(
comparison_measure = wc_wrapper,
reference_measure = bk_wrapper
)
estimate_mdiff_paired(
comparison_mean = 12,
comparison_sd = 2,
reference_mean = 10,
reference_sd = 3,
n = 20,
correlation = 0.70
)
library(esci4)
estimate_mdiff_paired(
comparison_mean = 14.25,
comparison_sd = 4.28,
reference_mean = 12.88,
reference_sd = 3.4,
n = 16,
correlation = 0.70
)
estimate_mdiff_paired(
comparison_mean = 14.25,
comparison_sd = 4.28,
reference_mean = 12.88,
reference_sd = 3.4,
n = 16,
correlation = 0.80
)
estimate_mdiff_paired(
comparison_mean = 14.25,
comparison_sd = 4.28,
reference_mean = 12.88,
reference_sd = 3.4,
n = 16,
correlation = 0.85
)
estimate_mdiff_paired(
comparison_mean = 14.25,
comparison_sd = 4.28,
reference_mean = 12.88,
reference_sd = 3.4,
n = 16,
correlation = 0.89
)
estimate_mdiff_paired(
comparison_mean = 14.25,
comparison_sd = 4.28,
reference_mean = 12.88,
reference_sd = 3.4,
n = 16,
correlation = 0.86
)
estimate_mdiff_paired(
comparison_mean = 14.25,
comparison_sd = 4.28,
reference_mean = 12.88,
reference_sd = 3.4,
n = 16,
correlation = 0.87
)
estimate_mdiff_paired(
comparison_mean = 14.25,
comparison_sd = 4.28,
reference_mean = 12.88,
reference_sd = 3.4,
n = 16,
correlation = 0.865
)
estimate_mdiff_paired(
comparison_mean = 14.25,
comparison_sd = 4.28,
reference_mean = 12.88,
reference_sd = 3.4,
n = 16,
correlation = 0.87
)
=sqrt(mean(4.28^2, 3.4^2))
sqrt(mean(4.28^2, 3.4^2))
sqrt((4.28^2 + 3.4^2)/2)
library(esci4)
estimate_mdiff_paired(
comparison_mean = 14.25,
comparison_sd = 4.28,
reference_mean = 12.88,
reference_sd = 3.4,
n = 16,
correlation = 0.87
)
sd1 <- 4.28
sd2 <- 3.4
sdiff <- 2.13
cor <- (sd1^2 + sd2^2 + sdiff^2) / (2*sd1*sd2)
sd1 <- 4.28
sd2 <- 3.4
sdiff <- 2.13
cor <- (sd1^2 + sd2^2 - sdiff^2) / (2*sd1*sd2)
sd1 <- 4.28
sd2 <- 3.4
sdiff <- 2.13
cor <- (sd1^2 + sd2^2 - sdiff^2) / (2*sd1*sd2)
estimate_mdiff_paired(
comparison_mean = 14.25,
comparison_sd = 4.28,
reference_mean = 12.88,
reference_sd = 3.4,
n = 16,
correlation = 0.87072223749
)
library(esci4)
estimate_mdiff_paired(
comparison_mean = 14.25,
comparison_sd = 4.28,
reference_mean = 12.88,
reference_sd = 3.4,
n = 16,
correlation = 0.87072223749
)
library(esci4)
sd1 <- 4.28
sd2 <- 3.4
sdiff <- 2.13
cor <- (sd1^2 + sd2^2 - sdiff^2) / (2*sd1*sd2)
estimate_mdiff_paired(
comparison_mean = 14.25,
comparison_sd = 4.28,
reference_mean = 12.88,
reference_sd = 3.4,
n = 16,
correlation = 0.87072223749
)
bk_wrapper <- c(
4	,
4	,
3	,
2	,
2	,
5	,
1	,
1	,
3	,
1	,
1	,
2	,
4	,
3	,
1	,
1	,
1	,
3	,
1	,
1	,
1	,
5	,
1	,
4	,
1	,
3	,
2	,
4	,
2	,
1
)
wc_wrapper <- c(
2	,
3	,
2	,
1	,
1	,
2	,
1	,
1	,
3	,
2	,
1	,
1	,
2	,
4	,
1	,
1	,
4	,
2	,
2	,
1	,
2	,
2	,
1	,
3	,
2	,
2	,
1	,
1	,
2	,
2
)
wrapper <- data.frame(
"wc" = wc_wrapper,
"bk" = bk_wrapper
)
# Check - vector
estimate_mdiff_paired(
comparison_measure = wc_wrapper,
reference_measure = bk_wrapper
)
library(esci4)
library(esci4)
estimate_mdiff_paired(iris, Sepal.Length, Petal.Length)
library(esci4)
library(esci4)
? statpsych::ci.lc.prop.bs
? statpsych::ci.prop1
myprop <- statpsych::ci.prop1(0.05, 10, 20)
myprop
mypropc <- statpsych::ci.lc.prop.bs(0.05, f = c(10, 5, 5), n = c(20, 20, 20), v = (1, 0, 0))
mypropc <- statpsych::ci.lc.prop.bs(0.05, f = c(10, 5, 5), n = c(20, 20, 20), v = c(1, 0, 0))
mypropc
mypropc <- statpsych::ci.lc.prop.bs(0.05, f = c(10, 5, 5), n = c(20, 20, 20), v = c(0, 1, 0))
mypropc
mypropc <- statpsych::ci.lc.prop.bs(0.05, f = c(10), n = c(20), v = c(1))
cells <- 4
paste("Group ", c(1:cells))
library(esci4)
library(esci4)
library(esci4)
overview_nominal(counts = c(10, 20, 10))
library(esci4)
overview_nominal(counts = c(10, 20, 10))
library(esci4)
library(esci4)
overview_nominal(counts = c(10, 20, 10))
library(esci4)
overview_nominal(counts = c(10, 20, 10))
library(esci4)
overview_nominal(counts = c(10, 20, 10))
overview_table
res
library(esci4)
library(esci4)
library(esci4)
overview_nominal(counts = c(10, 20, 10))
overview_nominal(counts = c(8, 22-8))
8/22
statpsych::ci.prop1(0.05, f = 8, n = 22)
library(esci4)
overview_nominal(counts = c(8, 22-8))
ov <-  overview_nominal(counts = c(8, 22-8))
sum(ov$P)
12/100
overview_nominal(
counts = c(8, 22-8),
outcome_variable_levels = c("Depressed", "Not-Depressed"),
outcome_variable_name = "Depression Status"
)
overview_nominal(
counts = c(8, 22-8),
outcome_variable_levels = c("Depressed", "Not-Depressed"),
outcome_variable_name = "Depression Status",
conf_level = 0.99
)
overview_nominal(
counts = c(8, 22-8),
outcome_variable_levels = c("Depressed", "Not-Depressed"),
outcome_variable_name = "Depression Status",
conf_level = 0.99
)
statpsych::ci.prop1(0.01, 8, 22)
library(esci4)
dep_status <- c(
rep("Depressed", 8),
rep("NotDepressed", 22-8)
)
overview_nominal(
outcome_variable = dep_status
)
library(esci4)
overview_nominal(
outcome_variable = dep_status
)
library(esci4)
overview_nominal(
outcome_variable = dep_status
)
library(esci4)
overview_nominal(
outcome_variable = dep_status
)
library(esci4)
overview_nominal(
outcome_variable = dep_status
)
outcome_variable
library(esci4)
overview_nominal(
outcome_variable = dep_status
)
groups
levels(outcome_variable)
outcome_variable
levels(as.factor(outcome_variable))
class(dep_status)
levels(dep_status)
dep_status <- as.factor(
c(
rep("Depressed", 8),
rep("NotDepressed", 22-8)
)
)
levels(dep_status)
class(dep_status)
dep_status <- as.factor(
c(
rep("Depressed", 8),
rep("NotDepressed", 22-8)
)
)
overview_nominal(
outcome_variable = dep_status
)
overview_nominal(
outcome_variable = dep_status
)
class(outcome_variable)
library(esci4)
# Esci one proportion - 8/22
overview_nominal(counts = c(8, 22-8))
overview_nominal(
counts = c(8, 22-8),
outcome_variable_levels = c("Depressed", "Not-Depressed"),
outcome_variable_name = "Depression Status",
conf_level = 0.99
)
dep_status <- as.factor(
c(
rep("Depressed", 8),
rep("NotDepressed", 22-8)
)
)
overview_nominal(
outcome_variable = dep_status
)
library(esci4)
overview_nominal(
outcome_variable = dep_status
)
overview_table
aggregate(
outcome_variable,
by = list(addNA(outcome_variable)),
drop = FALSE,
FUN = length)[, 2]
overview_nominal(
outcome_variable = dep_status
)
outcome_variable_names
groups
# Setup   ---------------------
groups <- addNA(levels(as.factor(outcome_variable)))
outcome_variable_names <- c(rep(outcome_variable_name, length(groups)), NA)
# Build the overview table ---------------------------------------------------
overview_table <- data.frame(
outcome_variable_name = outcome_variable_names,
outcome_variable_levels = groups
)
data.frame(groups = groups)
groups
? as.data.frame
library(esci4)
overview_nominal(
outcome_variable = dep_status
)
library(esci4)
overview_nominal(
outcome_variable = dep_status
)
library(esci4)
overview_nominal(
outcome_variable = dep_status
)
overview_table$n <- sum(overview_table$n, na.omit(TRUE))
overview_table
library(esci4)
overview_nominal(
outcome_variable = dep_status
)
overview_table
